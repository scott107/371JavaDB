import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ModeratorTabs extends javax.swing.JFrame {

    /**
     * Creates new form ModeratorTabs
     */
    public ModeratorTabs(String username) {
        setTitle("Moderator: " + username);
        initComponents(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents(String username) {

        moderatorPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        categoryLabel = new javax.swing.JLabel();
        periodLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        categoryBox = new javax.swing.JComboBox<>();
        periodBox = new javax.swing.JComboBox<>();
        titleTextbox = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        claimButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        unclaimedTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        denyButton = new javax.swing.JButton();
        approveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        myAdvertTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        categoryLabel.setText("Category");

        periodLabel.setText("Period");

        titleLabel.setText("Title, Description");

        categoryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { /*Scott.getCategories()*/"All", "CAT", "HOU", "ELC", "CCA" }));

        periodLabel.setText("Period");

        periodBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Last 3 Months", "Last 6 Months", "Last 12 Months", "Life" }));

        filterButton.setText("Go");

        claimButton.setText("Claim Ad");

        updateUnclaimedTable();//Doesn't need username, returning all w/o mod
        jScrollPane1.setViewportView(unclaimedTable);
        unclaimedTable.setRowSelectionAllowed(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(claimButton))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(categoryLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(periodBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(periodLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(titleLabel)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addComponent(titleTextbox))
                                                .addGap(18, 18, 18)
                                                .addComponent(filterButton)))
                                .addGap(20, 20, 20))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(categoryLabel)
                                        .addComponent(periodLabel)
                                        .addComponent(titleLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(periodBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(titleTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(filterButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(claimButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        moderatorPane.addTab("Unclaimed Advertisements", jPanel1);

        approveButton.setText("Approve");
        approveButton.setActionCommand("");
        approveButton.setAutoscrolls(true);

        updateMyAdvertTable(username);
        jScrollPane2.setViewportView(myAdvertTable);
        myAdvertTable.setRowSelectionAllowed(true);

        denyButton.setText("Deny");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(approveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(denyButton)
                                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(approveButton)
                                        .addComponent(denyButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(43, Short.MAX_VALUE))
        );

        moderatorPane.addTab("My Advertisements", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(moderatorPane)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(moderatorPane)
                                .addContainerGap())
        );

        filterButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String category = (String) categoryBox.getSelectedItem();
                String period = (String) periodBox.getSelectedItem();
                String titleDescription = titleTextbox.getText();
                //System.out.println(titleDescription + " " + category + " " + period);
                /*Scott.filter(titleDescription, category, period)*/
                updateUnclaimedTable();
            }
        });

        claimButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = unclaimedTable.getSelectedRow();
                int advertID = (int) unclaimedTable.getValueAt(row, 0);
                boolean claimed = /*Scott.claimAdvert(advertID, username)*/true;
                if(claimed){
                    //System.out.println(advertID);
                    updateUnclaimedTable();
                    updateMyAdvertTable(username);
                }
            }
        });

        approveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = myAdvertTable.getSelectedRow();
                int advertID = (int) myAdvertTable.getValueAt(row, 0);
                boolean approved = /*Scott.approvedvert(advertID)*/true;
                if(approved){
                    //System.out.println(advertID);
                    updateMyAdvertTable(username);
                }
            }
        });

        denyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = myAdvertTable.getSelectedRow();
                int advertID = (int) myAdvertTable.getValueAt(row, 0);
                boolean denied = /*Scott.deniedvert(advertID)*/true;
                if(denied){
                    //System.out.println(advertID);
                    updateMyAdvertTable(username);
                }
            }
        });

        pack();
    }// </editor-fold>

    private void updateMyAdvertTable(String username) {
        myAdvertTable.setModel(new javax.swing.table.DefaultTableModel(
                /*Scott.fetchModMyAdvertData(username)*/new Object [][] {
                {1, null, null, null, null, null, null},
                {2, null, null, null, null, null, null},
                {3, null, null, null, null, null, null},
                {4, null, null, null, null, null, null}
        },
                new String [] {
                        "ID", "Title", "Description", "Price", "Status", "Date", "Username"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }

    private void updateUnclaimedTable() {
        unclaimedTable.setModel(new javax.swing.table.DefaultTableModel(
                /*Scott.fetchModUnclaimedData()*/new Object [][] {
                {1, null, null, null, null, null},
                {2, null, null, null, null, null},
                {3, null, null, null, null, null},
                {4, null, null, null, null, null}
        },
                new String [] {
                        "ID", "Title", "Description", "Price", "Date", "Username"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }


    // Variables declaration - do not modify
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton claimButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JButton denyButton;
    private javax.swing.JButton approveButton;
    private javax.swing.JComboBox<String> categoryBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable myAdvertTable;
    private javax.swing.JTabbedPane moderatorPane;
    private javax.swing.JComboBox<String> periodBox;
    private javax.swing.JLabel periodLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextbox;
    private javax.swing.JTable unclaimedTable;
    // End of variables declaration
}


